// Code generated from LDE.g4 by ANTLR 4.7.1. DO NOT EDIT.

package parser

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 27, 158,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22, 4, 23,
	9, 23, 4, 24, 9, 24, 4, 25, 9, 25, 4, 26, 9, 26, 4, 27, 9, 27, 4, 28, 9,
	28, 3, 2, 3, 2, 3, 3, 3, 3, 3, 4, 3, 4, 3, 5, 3, 5, 3, 6, 3, 6, 3, 7, 3,
	7, 3, 8, 3, 8, 3, 9, 3, 9, 3, 10, 3, 10, 3, 11, 3, 11, 3, 12, 3, 12, 3,
	13, 3, 13, 3, 14, 3, 14, 3, 14, 3, 15, 3, 15, 3, 16, 3, 16, 3, 17, 3, 17,
	3, 18, 3, 18, 3, 19, 3, 19, 7, 19, 95, 10, 19, 12, 19, 14, 19, 98, 11,
	19, 3, 20, 3, 20, 7, 20, 102, 10, 20, 12, 20, 14, 20, 105, 11, 20, 3, 20,
	3, 20, 6, 20, 109, 10, 20, 13, 20, 14, 20, 110, 3, 21, 6, 21, 114, 10,
	21, 13, 21, 14, 21, 115, 3, 22, 3, 22, 3, 22, 3, 23, 3, 23, 3, 23, 7, 23,
	124, 10, 23, 12, 23, 14, 23, 127, 11, 23, 3, 23, 3, 23, 3, 24, 3, 24, 3,
	24, 3, 25, 3, 25, 3, 25, 7, 25, 137, 10, 25, 12, 25, 14, 25, 140, 11, 25,
	3, 25, 3, 25, 3, 26, 3, 26, 3, 26, 3, 26, 3, 27, 3, 27, 7, 27, 150, 10,
	27, 12, 27, 14, 27, 153, 11, 27, 3, 27, 3, 27, 3, 28, 3, 28, 4, 125, 138,
	2, 29, 3, 3, 5, 4, 7, 5, 9, 6, 11, 7, 13, 8, 15, 9, 17, 10, 19, 11, 21,
	12, 23, 13, 25, 14, 27, 15, 29, 16, 31, 17, 33, 18, 35, 19, 37, 20, 39,
	21, 41, 22, 43, 2, 45, 23, 47, 2, 49, 24, 51, 25, 53, 26, 55, 27, 3, 2,
	9, 4, 2, 62, 62, 64, 64, 5, 2, 67, 92, 97, 97, 99, 124, 6, 2, 50, 59, 67,
	92, 97, 97, 99, 124, 3, 2, 50, 59, 4, 2, 11, 12, 15, 15, 5, 2, 11, 12,
	15, 15, 34, 34, 4, 2, 12, 12, 15, 15, 2, 164, 2, 3, 3, 2, 2, 2, 2, 5, 3,
	2, 2, 2, 2, 7, 3, 2, 2, 2, 2, 9, 3, 2, 2, 2, 2, 11, 3, 2, 2, 2, 2, 13,
	3, 2, 2, 2, 2, 15, 3, 2, 2, 2, 2, 17, 3, 2, 2, 2, 2, 19, 3, 2, 2, 2, 2,
	21, 3, 2, 2, 2, 2, 23, 3, 2, 2, 2, 2, 25, 3, 2, 2, 2, 2, 27, 3, 2, 2, 2,
	2, 29, 3, 2, 2, 2, 2, 31, 3, 2, 2, 2, 2, 33, 3, 2, 2, 2, 2, 35, 3, 2, 2,
	2, 2, 37, 3, 2, 2, 2, 2, 39, 3, 2, 2, 2, 2, 41, 3, 2, 2, 2, 2, 45, 3, 2,
	2, 2, 2, 49, 3, 2, 2, 2, 2, 51, 3, 2, 2, 2, 2, 53, 3, 2, 2, 2, 2, 55, 3,
	2, 2, 2, 3, 57, 3, 2, 2, 2, 5, 59, 3, 2, 2, 2, 7, 61, 3, 2, 2, 2, 9, 63,
	3, 2, 2, 2, 11, 65, 3, 2, 2, 2, 13, 67, 3, 2, 2, 2, 15, 69, 3, 2, 2, 2,
	17, 71, 3, 2, 2, 2, 19, 73, 3, 2, 2, 2, 21, 75, 3, 2, 2, 2, 23, 77, 3,
	2, 2, 2, 25, 79, 3, 2, 2, 2, 27, 81, 3, 2, 2, 2, 29, 84, 3, 2, 2, 2, 31,
	86, 3, 2, 2, 2, 33, 88, 3, 2, 2, 2, 35, 90, 3, 2, 2, 2, 37, 92, 3, 2, 2,
	2, 39, 99, 3, 2, 2, 2, 41, 113, 3, 2, 2, 2, 43, 117, 3, 2, 2, 2, 45, 120,
	3, 2, 2, 2, 47, 130, 3, 2, 2, 2, 49, 133, 3, 2, 2, 2, 51, 143, 3, 2, 2,
	2, 53, 147, 3, 2, 2, 2, 55, 156, 3, 2, 2, 2, 57, 58, 7, 63, 2, 2, 58, 4,
	3, 2, 2, 2, 59, 60, 7, 61, 2, 2, 60, 6, 3, 2, 2, 2, 61, 62, 7, 42, 2, 2,
	62, 8, 3, 2, 2, 2, 63, 64, 7, 43, 2, 2, 64, 10, 3, 2, 2, 2, 65, 66, 7,
	44, 2, 2, 66, 12, 3, 2, 2, 2, 67, 68, 7, 96, 2, 2, 68, 14, 3, 2, 2, 2,
	69, 70, 7, 93, 2, 2, 70, 16, 3, 2, 2, 2, 71, 72, 7, 95, 2, 2, 72, 18, 3,
	2, 2, 2, 73, 74, 7, 66, 2, 2, 74, 20, 3, 2, 2, 2, 75, 76, 7, 65, 2, 2,
	76, 22, 3, 2, 2, 2, 77, 78, 7, 97, 2, 2, 78, 24, 3, 2, 2, 2, 79, 80, 7,
	60, 2, 2, 80, 26, 3, 2, 2, 2, 81, 82, 7, 48, 2, 2, 82, 83, 7, 48, 2, 2,
	83, 28, 3, 2, 2, 2, 84, 85, 7, 39, 2, 2, 85, 30, 3, 2, 2, 2, 86, 87, 7,
	38, 2, 2, 87, 32, 3, 2, 2, 2, 88, 89, 7, 128, 2, 2, 89, 34, 3, 2, 2, 2,
	90, 91, 9, 2, 2, 2, 91, 36, 3, 2, 2, 2, 92, 96, 9, 3, 2, 2, 93, 95, 9,
	4, 2, 2, 94, 93, 3, 2, 2, 2, 95, 98, 3, 2, 2, 2, 96, 94, 3, 2, 2, 2, 96,
	97, 3, 2, 2, 2, 97, 38, 3, 2, 2, 2, 98, 96, 3, 2, 2, 2, 99, 103, 9, 3,
	2, 2, 100, 102, 9, 4, 2, 2, 101, 100, 3, 2, 2, 2, 102, 105, 3, 2, 2, 2,
	103, 101, 3, 2, 2, 2, 103, 104, 3, 2, 2, 2, 104, 106, 3, 2, 2, 2, 105,
	103, 3, 2, 2, 2, 106, 108, 7, 48, 2, 2, 107, 109, 9, 5, 2, 2, 108, 107,
	3, 2, 2, 2, 109, 110, 3, 2, 2, 2, 110, 108, 3, 2, 2, 2, 110, 111, 3, 2,
	2, 2, 111, 40, 3, 2, 2, 2, 112, 114, 9, 5, 2, 2, 113, 112, 3, 2, 2, 2,
	114, 115, 3, 2, 2, 2, 115, 113, 3, 2, 2, 2, 115, 116, 3, 2, 2, 2, 116,
	42, 3, 2, 2, 2, 117, 118, 7, 94, 2, 2, 118, 119, 7, 36, 2, 2, 119, 44,
	3, 2, 2, 2, 120, 125, 7, 36, 2, 2, 121, 124, 5, 43, 22, 2, 122, 124, 10,
	6, 2, 2, 123, 121, 3, 2, 2, 2, 123, 122, 3, 2, 2, 2, 124, 127, 3, 2, 2,
	2, 125, 126, 3, 2, 2, 2, 125, 123, 3, 2, 2, 2, 126, 128, 3, 2, 2, 2, 127,
	125, 3, 2, 2, 2, 128, 129, 7, 36, 2, 2, 129, 46, 3, 2, 2, 2, 130, 131,
	7, 94, 2, 2, 131, 132, 7, 41, 2, 2, 132, 48, 3, 2, 2, 2, 133, 138, 7, 41,
	2, 2, 134, 137, 5, 47, 24, 2, 135, 137, 10, 6, 2, 2, 136, 134, 3, 2, 2,
	2, 136, 135, 3, 2, 2, 2, 137, 140, 3, 2, 2, 2, 138, 139, 3, 2, 2, 2, 138,
	136, 3, 2, 2, 2, 139, 141, 3, 2, 2, 2, 140, 138, 3, 2, 2, 2, 141, 142,
	7, 41, 2, 2, 142, 50, 3, 2, 2, 2, 143, 144, 9, 7, 2, 2, 144, 145, 3, 2,
	2, 2, 145, 146, 8, 26, 2, 2, 146, 52, 3, 2, 2, 2, 147, 151, 7, 37, 2, 2,
	148, 150, 10, 8, 2, 2, 149, 148, 3, 2, 2, 2, 150, 153, 3, 2, 2, 2, 151,
	149, 3, 2, 2, 2, 151, 152, 3, 2, 2, 2, 152, 154, 3, 2, 2, 2, 153, 151,
	3, 2, 2, 2, 154, 155, 8, 27, 2, 2, 155, 54, 3, 2, 2, 2, 156, 157, 7, 35,
	2, 2, 157, 56, 3, 2, 2, 2, 12, 2, 96, 103, 110, 115, 123, 125, 136, 138,
	151, 3, 8, 2, 2,
}

var lexerDeserializer = antlr.NewATNDeserializer(nil)
var lexerAtn = lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "'='", "';'", "'('", "')'", "'*'", "'^'", "'['", "']'", "'@'", "'?'",
	"'_'", "':'", "'..'", "'%'", "'$'", "'~'", "", "", "", "", "", "", "",
	"", "'!'",
}

var lexerSymbolicNames = []string{
	"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "ComparisonOperator",
	"Identifier", "IdentifierWithFraction", "IntLit", "StringLit", "CharLit",
	"WS", "LineComment", "Stress",
}

var lexerRuleNames = []string{
	"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8",
	"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "ComparisonOperator",
	"Identifier", "IdentifierWithFraction", "IntLit", "EscapedQuote", "StringLit",
	"EscapedApo", "CharLit", "WS", "LineComment", "Stress",
}

type LDELexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var lexerDecisionToDFA = make([]*antlr.DFA, len(lexerAtn.DecisionToState))

func init() {
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
}

func NewLDELexer(input antlr.CharStream) *LDELexer {

	l := new(LDELexer)

	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "LDE.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// LDELexer tokens.
const (
	LDELexerT__0                   = 1
	LDELexerT__1                   = 2
	LDELexerT__2                   = 3
	LDELexerT__3                   = 4
	LDELexerT__4                   = 5
	LDELexerT__5                   = 6
	LDELexerT__6                   = 7
	LDELexerT__7                   = 8
	LDELexerT__8                   = 9
	LDELexerT__9                   = 10
	LDELexerT__10                  = 11
	LDELexerT__11                  = 12
	LDELexerT__12                  = 13
	LDELexerT__13                  = 14
	LDELexerT__14                  = 15
	LDELexerT__15                  = 16
	LDELexerComparisonOperator     = 17
	LDELexerIdentifier             = 18
	LDELexerIdentifierWithFraction = 19
	LDELexerIntLit                 = 20
	LDELexerStringLit              = 21
	LDELexerCharLit                = 22
	LDELexerWS                     = 23
	LDELexerLineComment            = 24
	LDELexerStress                 = 25
)
